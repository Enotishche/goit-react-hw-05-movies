{"version":3,"file":"static/js/748.5e7e41b8.chunk.js","mappings":"8SAEaA,EAAYC,EAAAA,EAAAA,IAAH,iDAGTC,EAAaD,EAAAA,EAAAA,KAAH,uHAOVE,EAAcF,EAAAA,EAAAA,MAAH,wMAWXG,EAAeH,EAAAA,EAAAA,OAAH,oT,SCbZI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBA,OACE,SAACT,EAAD,WACE,UAACE,EAAD,CAAYI,SAdO,SAAAI,GACrBA,EAAEC,iBAEyB,KAAvBH,EAAYI,QAKhBN,EAASE,GACTC,EAAe,KALbI,EAAAA,GAAAA,QAAc,wBAMjB,EAIG,WACE,SAACV,EAAD,CACEW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,KAAK,OACLC,MAAOX,EACPY,SA1Bc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACvBZ,EAAeY,EAAcF,MAAMG,cACpC,KA0BK,SAAClB,EAAD,CAAcU,KAAK,SAAnB,wBAIP,E,oBC3CYS,EAAYtB,EAAAA,EAAAA,GAAH,+D,UCSP,SAASuB,IAAa,IAAD,EAClC,GAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAwBnB,EAAAA,EAAAA,UAAS,GAAjC,eAAOoB,EAAP,KAAaC,EAAb,KACA,GAAgCrB,EAAAA,EAAAA,WAAS,GAAzC,eAAOsB,EAAP,KAAiBC,EAAjB,KACA,GAA0BvB,EAAAA,EAAAA,WAAS,GAAnC,eAAOwB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEM3B,EAAW,UAAG0B,EAAaE,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACR,GAAK7B,EAAL,CAIA,IAAM8B,EAAW,mCAAG,2FAClBR,GAAY,GADM,mBAGGS,EAAAA,EAAAA,IAAgB/B,EAAamB,GAHhC,UAKY,KAFtBa,EAHU,QAKPC,QAAQC,OALD,uBAMdV,EAAS,2BAAD,OAA4BxB,EAA5B,OANM,0BAWZkB,EADK,IAATC,EACca,EAAKC,QACL,SAAAE,GAAK,wBAAQA,IAAR,OAAkBH,EAAKC,SAAvB,GAZH,kDAchBT,EAAS,EAAD,IAdQ,yBAgBhBF,GAAY,GAhBI,6EAAH,qDAmBjBQ,GArBC,CAsBF,GAAE,CAAC9B,EAAamB,IAkBjB,OACE,kBAAMiB,UAAU,YAAhB,WACE,SAACvC,EAAD,CAAWC,SAlBM,SAAAuC,GACfrC,IAAgBqC,GAKpBV,EAA8B,KAAdU,EAAmB,CAAEC,MAAOD,GAAc,CAAC,GAC3DnB,EAAU,IACVI,GAAY,GACZE,GAAS,IAPPnB,EAAAA,GAAAA,KAAA,6BAAiCL,EAAjC,6BAQH,IASIqB,IAAY,SAACkB,EAAA,EAAD,IACZhB,IAAS,UAACR,EAAD,eAAaV,EAAAA,GAAAA,MAAYkB,GAAzB,OACTN,EAAOiB,OAAS,IAAK,SAACM,EAAA,EAAD,CAAWvB,OAAQA,IACxCA,EAAOiB,OAAS,IAAK,SAACO,EAAA,EAAD,CAAUC,QAVnB,WACftB,GAAQ,SAAAuB,GAAQ,OAAIA,EAAW,CAAf,GACjB,MAWF,C","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchBox = styled.div`\n  margin-bottom: 200px;\n`;\nexport const SearchForm = styled.form`\n  max-width: 400px;\n  margin: auto;\n  position: relative;\n  width: 100%;\n  display: flex;\n`;\nexport const SearchInput = styled.input`\n  height: 40px;\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid #ededed;\n  padding: 0 10px;\n  &:focus {\n    border-color: #0c0505;\n    outline: none;\n  }\n`;\nexport const SearchButton = styled.button`\n  border: none;\n  background-color: #ededed;\n  color: #000;\n  height: 40px;\n  padding: 0 20px;\n  cursor: pointer;\n  text-transform: uppercase;\n  transition: color 250ms linear, background-color 250ms linear;\n  &:hover {\n    background-color: #0c0505;\n    color: #fff;\n  }\n`;\n","import { toast } from 'react-toastify';\nimport propTypes from 'prop-types';\nimport { useState } from 'react';\nimport {\n  SearchBox,\n  SearchForm,\n  SearchInput,\n  SearchButton,\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [querySearch, setQuerySearch] = useState('');\n\n  const onChangeQuery = ({ currentTarget }) => {\n    setQuerySearch(currentTarget.value.toLowerCase());\n  };\n\n  const onSearchMovies = e => {\n    e.preventDefault();\n\n    if (querySearch.trim() === '') {\n      toast.warning('Search field is empty');\n      return;\n    }\n\n    onSubmit(querySearch);\n    setQuerySearch('');\n  };\n\n  return (\n    <SearchBox>\n      <SearchForm onSubmit={onSearchMovies}>\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          name=\"text\"\n          value={querySearch}\n          onChange={onChangeQuery}\n        />\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </SearchForm>\n    </SearchBox>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: propTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const InfoTitle = styled.h2`\n  color: #000;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getSearchMovies } from '../../api/FetchAPI';\nimport { SearchBar } from '../../components/SearchBar/SearchBar';\nimport { Loader } from '../../components/Loader/Loader';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { InfoTitle } from './MoviePage.styled.jsx';\nimport { LoadMore } from '../../components/LoadMore/LoadMore';\n\nexport default function MoviePage() {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loadings, setLoadings] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const querySearch = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!querySearch) {\n      return;\n    }\n\n    const moviesQuery = async () => {\n      setLoadings(true);\n      try {\n        const data = await getSearchMovies(querySearch, page);\n\n        if (data.results.length === 0) {\n          setError(`No results to show for \"${querySearch}!\"`);\n          return;\n        }\n\n        page === 1\n          ? setMovies(data.results)\n          : setMovies(state => [...state, ...data.results]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoadings(false);\n      }\n    };\n    moviesQuery();\n  }, [querySearch, page]);\n\n  const searchMovies = newMovies => {\n    if (querySearch === newMovies) {\n      toast.info(`Movies!! matching '${querySearch}' have already been found`);\n      return;\n    }\n\n    setSearchParams(newMovies !== '' ? { query: newMovies } : {});\n    setMovies([]);\n    setLoadings(false);\n    setError(false);\n  };\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <main className=\"container\">\n      <SearchBar onSubmit={searchMovies} />\n      {loadings && <Loader />}\n      {error && <InfoTitle> {toast.error(error)} </InfoTitle>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {movies.length > 0 && <LoadMore onClick={loadMore} />}\n    </main>\n  );\n}\n"],"names":["SearchBox","styled","SearchForm","SearchInput","SearchButton","SearchBar","onSubmit","useState","querySearch","setQuerySearch","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","InfoTitle","MoviePage","movies","setMovies","page","setPage","loadings","setLoadings","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","moviesQuery","getSearchMovies","data","results","length","state","className","newMovies","query","Loader","MovieList","LoadMore","onClick","prevPage"],"sourceRoot":""}