{"version":3,"file":"static/js/649.2bd80360.chunk.js","mappings":"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","sources":["api/FetchAPI.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport imageComing from '../images/imageComing.jpg';\n\nconst API_KEY = '92152c1b307f743741a0b94fea412fb6';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getPoster = img => {\n  if (img === null) {\n    return imageComing;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&page=${page}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  margin-bottom: 35px;\n  width: 100%;\n  display: block;\n  text-decoration: none;\n  font-size: 18px;\n  color: #000;\n  transition: color 250ms linear;\n  &:hover,\n  &:focus {\n    color: #5ac8fa;\n  }\n`;\n\nexport const MovieBox = styled.div`\n  display: flex;\n  border-bottom: 1px solid #ededed;\n  padding-bottom: 30px;\n  margin-bottom: 30px;\n`;\nexport const MoviePoster = styled.img`\n  margin-right: 35px;\n  width: 300px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 20px;\n  line-height: 1;\n`;\nexport const MovieScore = styled.p`\n  font-size: 18px;\n  margin-bottom: 30px;\n`;\nexport const MovieSubtitle = styled.h2`\n  margin-bottom: 15px;\n`;\nexport const MovieText = styled.p`\n  margin-bottom: 20px;\n`;\nexport const MovieList = styled.ul`\n  list-style: square;\n  padding-left: 20px;\n`;\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const AdditionalBox = styled.div`\n  margin-bottom: 30px;\n  border-bottom: 1px solid #ededed;\n  padding-bottom: 30px;\n`;\nexport const AdditionalLink = styled(NavLink)`\n  margin-right: 20px;\n  text-decoration: none;\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  &.active {\n    color: #5ac8fa;\n  }\n`;\n","import React from 'react';\nimport defaultPicture from '../../images/noImage.jpg';\nimport PropTypes from 'prop-types';\nimport { getPoster } from '../../api/FetchAPI';\n\nimport {\n  MovieBox,\n  MoviePoster,\n  MovieTitle,\n  MovieScore,\n  MovieSubtitle,\n  MovieText,\n  MovieList,\n  MovieItem,\n\n} from '../../pages/MovieDetails/MovieDetails.styled';\n\nconst MovieInfo = ({ movie, backPath }) => {\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movie;\n  const img = getPoster(poster_path);\n  const releaseDate = new Date(release_date).getFullYear();\n\n  return (\n    <MovieBox>\n      <MoviePoster \n      src={\n        img\n            ? img\n            : defaultPicture\n          } alt={title} />\n      <div>\n        <MovieTitle>\n          {title} ({releaseDate})\n        </MovieTitle>\n        <MovieScore>User score: {Math.round(vote_average * 10)}%</MovieScore>\n        {overview && (\n          <>\n            <MovieSubtitle>Overview</MovieSubtitle>\n            <MovieText>{overview}</MovieText>\n          </>\n        )}\n        {genres && (\n          <>\n            <MovieSubtitle>Genres</MovieSubtitle>\n            <MovieList>\n              {genres.map(({ id, name }) => {\n                return <MovieItem key={id}>{name}</MovieItem>;\n              })}\n            </MovieList>\n          </>\n        )}\n      </div>\n    </MovieBox>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n  }).isRequired,\n  backPath: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","import { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieId} from '../../api/FetchAPI';\nimport { Loader } from '../../components/Loader/Loader';\nimport MovieInfo from '../../components/MovieInfo/MovieInfo';\nimport {\n  BackLink,\n  MovieSubtitle,\n  AdditionalLink,\n  AdditionalBox,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function fetchInfo() {\n      try {\n        const data = await getMovieId(movieId);\n\n        setMovie(data);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchInfo();\n  }, [movieId]);\n \n  return (\n    <main className=\"container\">\n      <BackLink to={backLinkHref}>&larr; Back to</BackLink>\n      {movie && <MovieInfo movie={movie} backPath={backLinkHref} />}\n      <AdditionalBox>\n        <MovieSubtitle>Additional information</MovieSubtitle>\n        <AdditionalLink to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </AdditionalLink>\n        <AdditionalLink to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </AdditionalLink>\n      </AdditionalBox>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n"],"names":["axios","api_key","language","getPoster","img","imageComing","getTrendingMovies","page","data","getSearchMovies","query","getMovieId","movie_id","getCast","getReviews","BackLink","styled","NavLink","MovieBox","MoviePoster","MovieTitle","MovieScore","MovieSubtitle","MovieText","MovieList","MovieItem","AdditionalBox","AdditionalLink","movie","poster_path","backPath","title","vote_average","overview","genres","release_date","releaseDate","Date","getFullYear","src","defaultPicture","alt","Math","round","map","id","name","MovieDetails","movieId","useParams","useState","setMovie","backLinkHref","useLocation","state","from","useEffect","console","log","fetchInfo","className","to","Suspense","fallback","Loader"],"sourceRoot":""}