{"version":3,"file":"static/js/387.8ae6c14b.chunk.js","mappings":"qVAKAA,EAAAA,EAAAA,SAAAA,QAAA,+BACAA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAY,SAAAC,GACvB,OAAY,OAARA,EACKC,EAEH,kCAAN,OAAyCD,EAC1C,EAEYE,EAAiB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACRP,EAAAA,EAAAA,IAAA,oCAAuCO,IAD/B,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAOC,GAAP,8FAAcH,EAAd,+BAAqB,EAArB,SACNP,EAAAA,EAAAA,IAAA,8BACEU,EADF,iBACgBH,EADhB,yBADM,uBACrBC,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfG,EAAU,mCAAG,WAAMC,GAAN,yFACDZ,EAAAA,EAAAA,IAAA,iBAAoBY,IADnB,uBAChBJ,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKVK,EAAO,mCAAG,WAAMD,GAAN,yFACEZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,aADF,uBACbJ,EADa,EACbA,KADa,kBAGdA,GAHc,2CAAH,sDAKPM,EAAU,mCAAG,WAAMF,GAAN,yFACDZ,EAAAA,EAAAA,IAAA,iBAAoBY,EAApB,oBADC,uBAChBJ,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qD,2ICtCVO,EAAcC,EAAAA,EAAAA,GAAH,gDAIXC,EAAcD,EAAAA,EAAAA,GAAH,gGAKXE,EAAcF,EAAAA,EAAAA,GAAH,oEAIXG,EAAeH,EAAAA,EAAAA,EAAH,yF,SC+BzB,EApCgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,IARAC,EAAAA,EAAAA,YAAU,WACR,KACEX,EAAAA,EAAAA,IAAWM,GAASM,MAAK,SAAAlB,GAAI,OAAIgB,EAAWhB,EAAKmB,QAApB,GAG9B,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACR,IAEY,OAAZG,EAIJ,OACE,8BACGA,EAAQQ,OAAS,GAChB,SAAChB,EAAD,UACGQ,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,UAAce,KACd,uBAAIC,MAFYC,EAKrB,OAGH,SAAChB,EAAD,wDAIP,C","sources":["api/FetchAPI.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport imageComing from '../images/imageComing.jpg';\n\nconst API_KEY = '92152c1b307f743741a0b94fea412fb6';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getPoster = img => {\n  if (img === null) {\n    return imageComing;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&page=${page}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  margin-bottom: 20px;\n`;\n\nexport const ReviewsItem = styled.li`\n  border: 1px solid #ededed;\n  margin-bottom: 20px;\n  padding: 20px;\n`;\nexport const ReviewsName = styled.h3`\n  margin-bottom: 15px;\n  font-size: 18px;\n`;\nexport const ReviewsEmpty = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin-bottom: 50px;\n`;\n","import { getReviews } from '../../api/FetchAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  ReviewsList,\n  ReviewsItem,\n  ReviewsName,\n  ReviewsEmpty,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    try {\n      getReviews(movieId).then(data => setReviews(data.results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (reviews === null) {\n    return;\n  }\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <ReviewsItem key={id}>\n                <ReviewsName>{author}</ReviewsName>\n                <p>{content}</p>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <ReviewsEmpty>We don't have any reviews for this movie</ReviewsEmpty>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","language","getPoster","img","imageComing","getTrendingMovies","page","data","getSearchMovies","query","getMovieId","movie_id","getCast","getReviews","ReviewsList","styled","ReviewsItem","ReviewsName","ReviewsEmpty","movieId","useParams","useState","reviews","setReviews","useEffect","then","results","error","console","log","length","map","author","content","id"],"sourceRoot":""}