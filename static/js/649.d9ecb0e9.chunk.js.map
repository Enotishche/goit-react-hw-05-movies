{"version":3,"file":"static/js/649.d9ecb0e9.chunk.js","mappings":"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","sources":["api/FetchAPI.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport imageComing from '../images/imageComing.jpg';\n\nconst API_KEY = '92152c1b307f743741a0b94fea412fb6';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getPoster = img => {\n  if (img === null) {\n    return imageComing;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&page=${page}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(NavLink)`\n  margin-bottom: 35px;\n  width: 100%;\n  display: block;\n  text-decoration: none;\n  font-size: 18px;\n  color: #000;\n  transition: color 250ms linear;\n  &:hover,\n  &:focus {\n    color: #5ac8fa;\n  }\n`;\n\nexport const MovieBox = styled.div`\n  display: flex;\n  border-bottom: 1px solid #ededed;\n  padding-bottom: 30px;\n  margin-bottom: 30px;\n`;\nexport const MoviePoster = styled.img`\n  margin-right: 35px;\n  width: 300px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 20px;\n  line-height: 1;\n`;\nexport const MovieScore = styled.p`\n  font-size: 18px;\n  margin-bottom: 30px;\n`;\nexport const MovieSubtitle = styled.h2`\n  margin-bottom: 15px;\n`;\nexport const MovieText = styled.p`\n  margin-bottom: 20px;\n`;\nexport const MovieList = styled.ul`\n  list-style: square;\n  padding-left: 20px;\n`;\nexport const MovieItem = styled.li`\n  margin-bottom: 10px;\n`;\nexport const AdditionalBox = styled.div`\n  margin-bottom: 30px;\n  border-bottom: 1px solid #ededed;\n  padding-bottom: 30px;\n`;\nexport const AdditionalLink = styled(NavLink)`\n  margin-right: 20px;\n  text-decoration: none;\n  color: #000;\n  font-weight: 600;\n  font-size: 18px;\n  &.active {\n    color: #5ac8fa;\n  }\n`;\n","import React from 'react';\nimport defaultPicture from '../../images/noImage.jpg';\nimport PropTypes from 'prop-types';\nimport { getPoster } from '../../api/FetchAPI';\n\nimport {\n  MovieBox,\n  MoviePoster,\n  MovieTitle,\n  MovieScore,\n  MovieSubtitle,\n  MovieText,\n  MovieList,\n  MovieItem,\n} from '../../pages/MovieDetails/MovieDetails.styled';\n\nconst MovieInfo = ({ movie }) => {\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movie;\n  const img = getPoster(poster_path);\n  const releaseDate = new Date(release_date).getFullYear();\n\n  return (\n    <MovieBox>\n      <MoviePoster src={img ? img : defaultPicture} alt={title} />\n      <div>\n        <MovieTitle>\n          {title} ({releaseDate})\n        </MovieTitle>\n        <MovieScore>User score: {Math.round(vote_average * 10)}%</MovieScore>\n        {overview && (\n          <>\n            <MovieSubtitle>Overview</MovieSubtitle>\n            <MovieText>{overview}</MovieText>\n          </>\n        )}\n        {genres && (\n          <>\n            <MovieSubtitle>Genres</MovieSubtitle>\n            <MovieList>\n              {genres.map(({ id, name }) => {\n                return <MovieItem key={id}>{name}</MovieItem>;\n              })}\n            </MovieList>\n          </>\n        )}\n      </div>\n    </MovieBox>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n    overview: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieInfo;\n","import { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieId } from '../../api/FetchAPI';\nimport { Loader } from '../../components/Loader/Loader';\nimport MovieInfo from '../../components/MovieInfo/MovieInfo';\nimport {\n  BackLink,\n  MovieSubtitle,\n  AdditionalLink,\n  AdditionalBox,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function fetchInfo() {\n      setIsLoading(true);\n      try {\n        const data = await getMovieId(movieId);\n\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchInfo();\n  }, [movieId]);\n\n  return (\n    <main className=\"container\">\n      <BackLink to={backLinkHref}>&larr; Back to</BackLink>\n      {isLoading && <Loader />}\n      {error && <p>Oops...Something went wrong</p>}\n      {movie && <MovieInfo movie={movie} />}\n      <AdditionalBox>\n        <MovieSubtitle>Additional information</MovieSubtitle>\n        <AdditionalLink to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </AdditionalLink>\n        <AdditionalLink to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </AdditionalLink>\n      </AdditionalBox>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n"],"names":["axios","api_key","language","getPoster","img","imageComing","getTrendingMovies","page","data","getSearchMovies","query","getMovieId","movie_id","getCast","getReviews","BackLink","styled","NavLink","MovieBox","MoviePoster","MovieTitle","MovieScore","MovieSubtitle","MovieText","MovieList","MovieItem","AdditionalBox","AdditionalLink","movie","poster_path","title","vote_average","overview","genres","release_date","releaseDate","Date","getFullYear","src","defaultPicture","alt","Math","round","map","id","name","MovieDetails","movieId","useParams","useState","setMovie","location","useLocation","error","setError","isLoading","setIsLoading","backLinkHref","state","from","useEffect","fetchInfo","className","to","Loader","Suspense","fallback"],"sourceRoot":""}