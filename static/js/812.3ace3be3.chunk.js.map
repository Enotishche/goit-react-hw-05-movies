{"version":3,"file":"static/js/812.3ace3be3.chunk.js","mappings":"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","sources":["api/FetchAPI.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\nimport imageComing from '../images/imageComing.jpg';\n\nconst API_KEY = '92152c1b307f743741a0b94fea412fb6';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getPoster = img => {\n  if (img === null) {\n    return imageComing;\n  }\n  return `https://image.tmdb.org/t/p/w500${img}`;\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${query}&page=${page}&include_adult=false`\n  );\n  return data;\n};\n\nexport const getMovieId = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/credits`);\n\n  return data;\n};\nexport const getReviews = async movie_id => {\n  const { data } = await axios.get(`/movie/${movie_id}/reviews?page=1`);\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -10px;\n  margin-right: -10px;\n  margin-bottom: 50px;\n`;\nexport const MovieItem = styled.li`\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-top: 20px;\n  width: calc((100% - 3 * 20px) / 3);\n  &:nth-of-type(-n + 3) {\n    margin-top: 0;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  border: 1px solid #ededed;\n  &:hover > h2 {\n    color: #5ac8fa;\n  }\n`;\nexport const MovieImg = styled.img`\n  background-color: #ededed;\n  min-height: 610px;\n  margin-bottom: 15px;\n`;\nexport const MovieTitle = styled.h2`\n  font-size: 22px;\n  color: #000;\n  margin-bottom: 15px;\n  padding: 0 15px;\n  transition: color 250ms linear;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getPoster } from '../../api/FetchAPI';\nimport {\n  MovieContainer,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieTitle,\n} from './MovieList.styled';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n\n  const movieItem = movies.map(({ id, poster_path, title }) => {\n    const img = getPoster(poster_path);\n\n    return (\n      <MovieItem key={id}>\n        <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n          <MovieImg src={img} alt={title} />\n          <MovieTitle>{title}</MovieTitle>\n        </MovieLink>\n      </MovieItem>\n    );\n  });\n\n  return <MovieContainer>{movieItem}</MovieContainer>;\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  text-align: center;\n  color: #000;\n  margin-bottom: 50px;\n`;\n","import { getTrendingMovies } from '../../api/FetchAPI';\nimport { useState, useEffect } from 'react';\nimport MovieList from '../../components/MovieList/MovieList';\nimport { Title } from './HomePage.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nfunction HomePage() {\n  const [popularMovie, setPopularMovie] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    try {\n      getTrendingMovies().then(({ results }) => setPopularMovie(results));\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const moviesTrends = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await getTrendingMovies();\n        if (movies.length === 0) {\n          return;\n        }\n        setPopularMovie(movies.results);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    moviesTrends();\n  }, []);\n\n  return (\n    <main className=\"container\">\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n      {popularMovie && <MovieList movies={popularMovie} />}\n      {error && <p>Oops...Something went wrong</p>}\n    </main>\n  );\n}\nexport default HomePage;\n"],"names":["axios","api_key","language","getPoster","img","imageComing","getTrendingMovies","page","data","getSearchMovies","query","getMovieId","movie_id","getCast","getReviews","MovieContainer","styled","MovieItem","MovieLink","Link","MovieImg","MovieTitle","MovieList","movies","location","useLocation","movieItem","map","id","poster_path","title","to","state","from","src","alt","Title","useState","popularMovie","setPopularMovie","error","setError","isLoading","setIsLoading","useEffect","then","results","console","log","moviesTrends","length","className","Loader"],"sourceRoot":""}